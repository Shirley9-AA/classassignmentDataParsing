import sys
import csv
import json
import xml.etree.ElementTree as ET

# Check if the correct number of arguments are provided
if len(sys.argv) != 3:
    print("Usage: python file_converter.py <filename> <format>")
    sys.exit()

# Get the input filename and format from the command line arguments
input_filename = sys.argv[1]
output_format = sys.argv[2]

# Open the input file and read its contents
with open(input_filename, 'r') as f:
    data = f.read()

# Convert the data to the desired format
if output_format == '-c':
    # Convert to CSV
    rows = [row.split(',') for row in data.split('\n')]
    with open('output.csv', 'w', newline='') as f:
        writer = csv.writer(f)
        writer.writerows(rows)
elif output_format == '-j':
    # Convert to JSON
    rows = [row.split(',') for row in data.split('\n')]
    headers = rows[0]
    output = []
    for row in rows[1:]:
        obj = {}
        for i, val in enumerate(row):
            obj[headers[i]] = val
        output.append(obj)
    with open('output.json', 'w') as f:
        json.dump(output, f, indent=4)
elif output_format == '-x':
    # Convert to XML
    root = ET.Element('root')
    rows = [row.split(',') for row in data.split('\n')]
    headers = rows[0]
    for row in rows[1:]:
        obj = ET.SubElement(root, 'row')
        for i, val in enumerate(row):
            obj.set(headers[i], val)
    tree = ET.ElementTree(root)
    tree.write('output.xml')

print(f"File converted to {output_format} format and saved as output.{output_format[1:].lower()}")
